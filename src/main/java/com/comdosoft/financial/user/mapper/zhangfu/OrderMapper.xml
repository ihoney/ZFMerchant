<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.user.mapper.zhangfu.OrderMapper">
  <!-- gch start -->
	<resultMap id="picsResultMap" type="com.comdosoft.financial.user.domain.zhangfu.GoodsPicture">
		 <id property="id" column="pic_id" />  
         <result property="urlPath" column="url_path" /> 
	</resultMap>
	
	<resultMap id="terResultMap" type="com.comdosoft.financial.user.domain.zhangfu.Terminal">
		 <id property="id" column="id" />  
         <result property="serialNum" column="serial_num" /> 
         <result property="orderId" column="order_id" /> 
         <result property="goodId" column="good_id" /> 
         <result property="reserver2" column="reserver2" /> 
	</resultMap>
	
	<resultMap id="goodBrandResultMap" type="com.comdosoft.financial.user.domain.zhangfu.GoodBrand">
		 <id property="id" column="good_brands_id" />  
         <result property="name" column="brand_name" /> 
	</resultMap>
	
	<resultMap id="payChannelMap" type="com.comdosoft.financial.user.domain.zhangfu.PayChannel">
		 <id property="id" column="pay_channel_id" />  
            <result property="name" column="channel_name" /> 
            <result property="status" column="status" /> 
            <result property="supportCancelFlag" column="supportCancelFlag" /> 
            <result property="openingCost" column="openingCost" /> 
            <result property="needPreliminaryVerify" column="needPreliminaryVerify" /> 
            <result property="factoryId" column="factoryId" /> 
            <result property="createdUserId" column="createdUserId" /> 
            <result property="createdUserType" column="createdUserType" /> 
            <result property="createdAt" column="createdAt" /> 
            <result property="updatedAt" column="updatedAt" /> 
            <result property="openingRequirement" column="openingRequirement" /> 
            <result property="openingDatum" column="openingDatum" /> 
            <result property="openingProtocol" column="openingProtocol" /> 
	</resultMap>
	
	<resultMap id="factoryResultMap" type="com.comdosoft.financial.user.domain.zhangfu.Factory">
		 <id property="id" column="id" />  
            <result property="name" column="factory_name" /> 
	</resultMap>
	
	<resultMap id="goodsMap" type="com.comdosoft.financial.user.domain.zhangfu.Good">
		 <id property="id" column="good_id" />  
            <result property="title" column="title" /> 
            <result property="volumeNumber" column="volume_number" />
            <result property="modelNumber" column="brand_number" />
            <association property="factory" javaType="com.comdosoft.financial.user.domain.zhangfu.Factory" resultMap="factoryResultMap" />  
            <association property="goodsBrand" javaType="com.comdosoft.financial.user.domain.zhangfu.GoodBrand" resultMap="goodBrandResultMap" />  
            <collection property="picsList" ofType="com.comdosoft.financial.user.domain.zhangfu.GoodsPicture" resultMap="picsResultMap" />  
	</resultMap>
	
	<resultMap id="addressMap" type="com.comdosoft.financial.user.domain.zhangfu.CustomerAddress">
		 <id property="id" column="address_id" />  
            <result property="receiver" column="receiver" /> 
            <result property="address" column="address" /> 
            <result property="moblephone" column="moblephone" /> 
            <result property="zipCode" column="zip_code" /> 
	</resultMap>
	<resultMap id="orderPaymentMap" type="com.comdosoft.financial.user.domain.zhangfu.OrderPayment">
		 <id property="id" column="order_payment_id" />  
            <result property="payType" column="pay_type" /> 
	</resultMap>
	<resultMap id="orderLogisticMap" type="com.comdosoft.financial.user.domain.zhangfu.OrderLogistic">
		 <id property="orderId" column="order_id" />  
            <result property="logisticsName" column="logistics_name" /> 
            <result property="logisticsNumber" column="logistics_number" /> 
	</resultMap>
	
	<resultMap id="orderGoodsMap" type="com.comdosoft.financial.user.domain.zhangfu.OrderGood">
		 <id property="id" column="order_good_id" />
			<result property="quantity" column="quantity" />
			<result property="price" column="price" />
			<result property="actualPrice" column="actual_price" />
			<result property="createdAt" column="created_at" />
			<result property="updatedAt" column="updated_at" />
			<association property="payChannel" javaType="com.comdosoft.financial.user.domain.zhangfu.PayChannel" resultMap="payChannelMap" />  
			<association property="good" javaType="com.comdosoft.financial.user.domain.zhangfu.Good" resultMap="goodsMap" />  
	</resultMap>
	
	<resultMap id="orderMarksMap" type="com.comdosoft.financial.user.domain.zhangfu.OrderMark">
		 <id property="id" column="om_order_id" />
			<result property="createdAt" column="om_created_at" />
			<result property="content" column="om_content" />
			<association property="customer" javaType="com.comdosoft.financial.user.domain.zhangfu.Customer">  
				 <id property="id" column="om_custmoer_id" />
				 <result property="name" column="om_name" />
			</association>
	</resultMap>
	
	<resultMap id="orderMap" type="com.comdosoft.financial.user.domain.zhangfu.Order">
		<id property="id" column="id" />
		<result property="orderNumber" column="order_number" />
		<result property="customerId" column="customer_id" />
		<result property="needInvoice" column="need_invoice" />
		<result property="totalPrice" column="o_total_price" />
		<result property="status" column="status"/>
		<result property="payedAt" column="payed_at" />
		<result property="types" column="types" />
		<result property="needInvoice" column="need_invoice" />
		<result property="actualPrice" column="o_actual_price" />
		<result property="frontMoney" column="front_money" />
		<result property="frontPayStatus" column="front_pay_status" />
		<result property="createdUserId" column="created_userId" />
		<result property="createdUserType" column="created_user_type" />
		<result property="processUserId" column="process_user_id" />
		<result property="processUserName" column="process_user_name" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
		<result property="agentOrderMarksId" column="agent_order_marks_id" />
		<result property="belongsTo" column="belongs_to" />
		<result property="invoiceType" column="invoice_type" />
		<result property="comment" column="comment" />
		<result property="invoiceInfo" column="invoice_info" />
		<result property="totalQuantity" column="total_quantity" />
		<result property="payStatus" column="pay_status" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
		<association property="customerAddress" javaType="com.comdosoft.financial.user.domain.zhangfu.CustomerAddress" resultMap="addressMap" />  
		<association property="orderLogistic" javaType="com.comdosoft.financial.user.domain.zhangfu.OrderLogistic" resultMap="orderLogisticMap" />  
		<association property="orderPayment" javaType="com.comdosoft.financial.user.domain.zhangfu.OrderPayment" resultMap="orderPaymentMap" />  
	    <collection property="orderGoodsList" ofType="com.comdosoft.financial.user.domain.zhangfu.OrderGood" resultMap="orderGoodsMap" />  
	    <collection property="orderMarkList" ofType="com.comdosoft.financial.user.domain.zhangfu.OrderMark" resultMap="orderMarksMap" />  
	</resultMap>

	<select id="countMyOrder" resultType="int">
		SELECT count(distinct(o.id))  as count
		FROM orders o
		where o.customer_id = #{customer_id}
		<if test="q !=null and q!=''">
		and o.status = #{q}
		</if>
		<if test="p !=null and p!=''">
		and o.types = #{p}
		</if>
 
	</select>
	
	<select id="countOrderSearch" resultType="int">
		SELECT count(distinct(o.id))  as count
		FROM orders o
		LEFT JOIN order_goods og ON o.id = og.order_id
		LEFT JOIN goods g ON og.good_id = g.id
		where o.customer_id = #{customer_id}
		<if test="search !=null and search!=''">
		and (o.order_number like "%"#{search}"%" 
			or g.title like "%"#{search}"%" 
			or g.second_title like "%"#{search}"%"  
			or g.key_worlds like "%"#{search}"%" ) 
		</if>
		<if test="q !=null and q!=''">
		and o.status = #{q}
		</if>
		and (o.types = 1 or o.types = 2)
 
	</select>

	<select id="orderSearch" resultMap="orderMap" >
		SELECT
		o.id as id,
		g.model_number AS brand_number,
		gb. NAME AS brand_name,
		og.id as order_good_id,
		g.id as good_id,
		 o.total_quantity,
		 g.volume_number,
		o.order_number,
		o.created_at,	
		o.status,g.title, 
		gb.id as good_brands_id,
		pc.name as channel_name,
		og.price ,
		og.actual_price ,
		og.quantity ,
		o.types,
		o.actual_price as o_actual_price,
		o.total_price as o_total_price,
		o.total_quantity as total_num
		FROM	
		orders o
		LEFT JOIN order_goods og ON o.id = og.order_id
		LEFT JOIN goods g ON og.good_id = g.id
		LEFT JOIN good_brands gb ON g.good_brands_id = gb.id
		LEFT JOIN pay_channels pc ON og.pay_channel_id = pc.id
		WHERE
		o.customer_id = #{customer_id}
		<if test="search !=null and search!=''">
		and (o.order_number like "%"#{search}"%" 
			or g.title like "%"#{search}"%" 
			or g.second_title like "%"#{search}"%"  
			or g.key_worlds like "%"#{search}"%" ) 
		</if>
		<if test="q !=null and q!=''">
		and o.status = #{q}
		</if>
		and (o.types = 1 or o.types = 2) 
		group by o.id
		order by o.created_at desc
		LIMIT #{offset},#{rows}
	</select>
	
	<select id="findGoodsByOrderId" resultMap="orderGoodsMap" >
		SELECT
		g.model_number AS brand_number,
		gb. NAME AS brand_name,g.title,
		og.id as order_good_id,
		g.id as good_id,
		 g.volume_number,
		gb.id as good_brands_id,
		pc.name as channel_name,
		og.price ,
		og.actual_price ,
		og.quantity 
		FROM	
		 order_goods og 
		LEFT JOIN goods g ON og.good_id = g.id
		LEFT JOIN good_brands gb ON g.good_brands_id = gb.id
		LEFT JOIN pay_channels pc ON og.pay_channel_id = pc.id
		WHERE
	      og.order_id =#{param1}
	</select>
	
	<select id="findMyOrderAll" resultMap="orderMap" >
		SELECT
		o.id as id,g.model_number AS brand_number,
		gb. NAME AS brand_name,
		og.id as order_good_id,
		g.id as good_id,
		 o.total_quantity,
		 g.volume_number,
		o.order_number,
		o.created_at,	
		o.status,g.title,  
		gb.id as good_brands_id,
		pc.name as channel_name,
		og.price ,
		og.actual_price ,
		og.quantity ,
		o.types,
		o.actual_price as o_actual_price,
		o.total_price as o_total_price,
		o.total_quantity as total_num
		FROM	
		orders o
		LEFT JOIN order_goods og ON o.id = og.order_id
		LEFT JOIN goods g ON og.good_id = g.id
		LEFT JOIN good_brands gb ON g.good_brands_id = gb.id
		LEFT JOIN pay_channels pc ON og.pay_channel_id = pc.id
		WHERE
		o.customer_id = #{customer_id}
		<if test="q !=null and q!=''">
		and o.status = #{q}
		</if>
		<if test="p !=null and p!=''">
		and o.types = #{p}
		</if>
		and (o.types = 1 or o.types = 2) 
		group by o.id 
		order by o.created_at desc
		LIMIT #{offset},#{rows}
	</select>
	
	<select id="findPicByGoodId" resultMap="picsResultMap" >
		SELECT
		gp.id as pic_id,
		gp.url_path 
		FROM	
		goods_pictures gp 
		WHERE
		 gp.good_id = #{param1}
		order by gp.id desc
	</select>
	
	<select id="findMyOrderById" resultMap="orderMap">
	SELECT
	o.id as id,g.model_number AS brand_number,
		gb. NAME AS brand_name,o.need_invoice,
	og.id as order_good_id,
	g.id as good_id,
	o.total_quantity,
	p.pay_type,
	g.factory_id,
	o.order_number,
	 o.created_at,
	  o.status,
	  o.pay_status,
	  gp.id as pic_id,
	  o.invoice_type,
	  og.actual_price,
	gp.url_path ,
	g.title, 
	 gb.id as good_brands_id,
	 o.comment,
	 f.name as factory_name,
	 o.types,
	pc.name as channel_name,
	og.price , 
	og.quantity ,
	o.invoice_info,
	o.actual_price as o_actual_price,
	o.total_price as o_total_price,
	o.total_quantity as total_num,
	om.customer_id as om_customer_id,
	om.order_id as om_order_id,oo.logistics_name,oo.logistics_number,
	ca.receiver ,CONCAT(cccs.`name`,' ',ccs.`name`,' ',ca.address) as address,ca.moblephone,om.content as om_content,om.created_at as om_create_at,c.`name` as om_name
	FROM
	orders o
	LEFT JOIN order_goods og ON o.id = og.order_id
	LEFT JOIN goods g ON og.good_id = g.id
	LEFT JOIN goods_pictures gp ON g.id = gp.good_id
	LEFT JOIN good_brands gb ON g.good_brands_id = gb.id
	LEFT JOIN factories f ON g.factory_id = f.id
	LEFT JOIN pay_channels pc ON og.pay_channel_id = pc.id
	LEFT JOIN customer_addresses ca on o.customer_address_id = ca.id
	LEFT JOIN order_marks om on o.id = om.order_id
	LEFT JOIN customers c on om.customer_id = c.id
	LEFT JOIN order_payments p on o.id= p.order_id
	left join order_logistics oo on o.id = oo.order_id
	left JOIN cities ccs on ccs.id = ca.city_id
left JOIN cities cccs on cccs.id = ccs.parent_id
	WHERE
	o.id = #{param1}
	</select>
    
	<update id="changeStatus" >
        UPDATE orders
			SET status = #{orderStatus.code},	cancel_flag =#{cancel_flag.code} ,updated_at = NOW()
		WHERE
			id = #{id}
    </update>
    <!-- 清理 -->
	<update id="cleanOrder" >
      UPDATE orders t
		SET t.`status` = 6,t.updated_at= NOW()
		WHERE
			DATE_SUB(NOW(), INTERVAL 1 DAY) > t.created_at
		AND t.`status` = 1  and (t.types =1 or t.types =2)
    </update>
    
	<update id="update_goods_stock" >
     UPDATE goods
	SET quantity = quantity + #{param2},updated_at= NOW()
	WHERE
		id = #{param1}
    </update>
    <!-- 查询 要清理的订单中的商品id和库存 -->
    <select id="findPersonGoodsQuantity" resultType="map" >
    	SELECT
			og.good_id,
			sum(og.quantity) as quantity
		FROM
			orders t
		right JOIN order_goods og ON og.order_id = t.id
		WHERE
			DATE_SUB(NOW(), INTERVAL 1 DAY) > t.created_at
		AND t.`status` = 1  and (t.types =1 or t.types =2)
		GROUP BY
			og.good_id
    </select>
    
    
    	<!-- 查询此订单的原有库存 -->
	<select id="findOrderById"  resultType="map" >
	 	SELECT
			og.good_id, 	sum(og.quantity) as quantity
		FROM
			orders t
		right JOIN order_goods og ON og.order_id = t.id
		WHERE t.id=#{id}
	</select>
 
    
    
    <insert id="comment" useGeneratedKeys="true" keyProperty="id" parameterType="com.comdosoft.financial.user.domain.zhangfu.GoodComment">
		INSERT into good_comments 
		(score,content,customer_id,good_id,created_at)
		VALUES(#{score},#{content},#{customer_id},#{good_id},NOW())
  </insert>
  
  <select id="findTraceById" resultType="map" >
		SELECT
			crm.content AS marks_content,
			crm.created_at,
			c.`name` AS marks_person
		FROM
			  order_marks crm 
		LEFT JOIN customers c ON crm.customer_id = c.id
		WHERE
		crm.order_id = #{id}
	</select>
	
	<insert id="batchSaveComment">
		INSERT into good_comments 
		(score,content,customer_id,good_id,created_at,status,customer_name,order_id)
		VALUES
		 <foreach collection="list" item="item" index="index" separator="," > 
			(#{item.score},#{item.content},#{item.customer_id},#{item.good_id},NOW(),1,#{item.customer_name},#{item.order_id})
    	</foreach> 
	</insert>
	
	  <select id="getTerminsla" resultMap="terResultMap" >
		select   t.serial_num,t.reserver2,t.id   from terminals t where t.order_id=#{param1} 
		<if test="param2 != null">
			and  t.good_id = #{param2}
		</if>
	</select>
  
    
	<!-- gch end -->
	
	 <!-- jwb -->
	 <insert id="addOrder" useGeneratedKeys="true" keyProperty="id" parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
		INSERT into orders 
		(order_number,customer_id,total_price,status,types,
		customer_address_id,need_invoice,invoice_type,
		invoice_info,actual_price,created_at,updated_at,
		comment,total_quantity,created_user_id,belongs_user_Id,belongs_to)
		VALUES(#{ordernumber},#{customerId},#{totalprice},1,#{type},
		#{addressId},#{is_need_invoice},#{invoice_type},#{invoice_info},
		#{totalprice},NOW(),NOW(),#{comment},#{totalcount},#{customerId},#{customerId},#{belongto})
  </insert>
  
  <insert id="addOrderGood"  parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
		INSERT into order_goods 
		(good_id,pay_channel_id,quantity,price,actual_price,
		order_id,created_at,updated_at)
		VALUES(#{goodId},#{paychannelId},#{quantity},
		#{price},#{retail_price},#{id},NOW(),NOW())
  </insert>
  
  <select id="getGoodInfos" resultType="map" parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
        SELECT sc.id,g.id as goodid,pc.id as paychanelid ,ifnull(g.belongs_to,0) belongs_to,
        sc.quantity,g.price,g.retail_price,pc.opening_cost,g.quantity as count
		from shopping_carts sc
		LEFT JOIN goods g on g.id=sc.good_id
		LEFT JOIN pay_channels pc on pc.id=sc.pay_channel_id
		where sc.id in ${cartids}
  </select>
  
  <select id="checkList" resultType="map" parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
        SELECT  g.id as goodid,sum(sc.quantity) as quantity,g.quantity as count
		from shopping_carts sc
		LEFT JOIN goods g on g.id=sc.good_id 	
		where sc.id in ${cartids}
    	GROUP BY goodid
  </select>
  
  <select id="getGoodInfo" resultType="map" parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
        SELECT  g.id as goodid,pc.id as paychanelid ,g.lease_deposit,ifnull(g.belongs_to,0) belongs_to,
        g.price,g.retail_price,pc.opening_cost,g.quantity as count
		from goods_pay_channels gpc
		LEFT JOIN goods g on g.id=gpc.good_id
		LEFT JOIN pay_channels pc on pc.id=gpc.pay_channel_id
		where gpc.good_id=#{goodId} and gpc.pay_channel_id=#{paychannelId}
  </select>
  
  <select id="getPayOrder" resultType="map" parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
        SELECT o.order_number,o.actual_price as total_price,ca.receiver,ca.address,IFNULL(op.pay_type,0) paytype,o.created_at
 		from orders o
		LEFT JOIN customer_addresses ca on ca.id=o.customer_address_id
		LEFT JOIN order_payments op on op.order_id=o.id
		where o.id=#{id} 
		order BY op.created_at desc LIMIT 1
  </select>
  
  <select id="getPayOrderGood" resultType="map" parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
        SELECT g.title,pc.name as pcname,og.quantity from order_goods og
		LEFT JOIN goods g on og.good_id=g.id
		left JOIN pay_channels pc on pc.id=og.pay_channel_id
		where order_id=#{id}
  </select>
  
   <insert id="payFinish"   parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
		INSERT into order_payments(order_id,price,pay_type,created_at)  
		VALUES(#{id},#{price},#{type},NOW())
  </insert>
  
  <select id="getOrderByMumber"  resultType="map" parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
		SELECT id,total_price from orders where order_number=#{ordernumber} and status=1
  </select>
  
  <update id="upOrder"   parameterType="com.comdosoft.financial.user.domain.query.OrderReq">
       UPDATE orders set status=2 where id=#{id}
  </update>
</mapper>
