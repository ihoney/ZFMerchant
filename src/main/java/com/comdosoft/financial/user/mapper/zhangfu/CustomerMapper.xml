<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.user.mapper.zhangfu.CustomerMapper">
	
	<select id="getSysConfig" resultType="map">
	<![CDATA[
	SELECT
		IFNULL(param_name,'') as param_name,
		IFNULL(param_value,'') as param_value,
		IFNULL(remark,'') as remark
	FROM
		sys_config
	WHERE
		param_name = #{paramName}
	]]>
	</select>

	<select id="getOne" resultType="map">
	<![CDATA[
		SELECT
			IFNULL(name,'') as name,
			IFNULL(phone,'') as phone,
			IFNULL(email,'') as email,
			IFNULL(city_id,'') as city_id,
			IFNULL(integral,'') as integral,
			IFNULL(password,'') as `password`
		FROM
			customers
		WHERE
			id = #{id}  
	]]>
	</select>

	<select id="findCustById" resultType="map">
	<![CDATA[
	SELECT
		IFNULL(c.name,'') as name,
		IFNULL(c.phone,'') as phone,
		IFNULL(c.email,'') as email,
		IFNULL(c.city_id,'') as city_id,
		IFNULL(c.integral,'') as integral,
		IFNULL(c.password,'') as `password`,
		IFNULL(c.account_type,'') as account_type,
		IFNULL(t.id,'') as id,
		IFNULL(t.`name`,'') as c_name,
		IFNULL(t.parent_id,'')as parent_id,
		IFNULL(tt.`name`,'') as p_name
	FROM
		customers c
	LEFT JOIN cities t ON c.city_id = t.id
	LEFT JOIN cities tt ON t.parent_id = tt.id
	WHERE
		 c.id = #{customer_id} 
	]]>
	</select>

	<update id="update" flushCache="true" >
		UPDATE customers
		<trim prefix="SET" suffixOverrides=",">
			updated_at = NOW(),
			<if test="name != null and name !=''">name = #{name},</if>
			<if test="phone != null and phone !=''">phone = #{phone},</if>
			<if test="email != null and email !=''">email = #{email},</if>
			<if test="cityId != null and cityId !=''">city_id = #{cityId}</if>
		</trim>
		WHERE id = #{id}
	</update>

	<select id="getCustomerById" resultType="com.comdosoft.financial.user.domain.zhangfu.Customer">
	 SELECT c.id,
			c.name,
			c.phone,
			c.email,
			c.city_id,
			c.integral,
			c.dentcode,
			c.account_type
	FROM
		customers c
	WHERE
		 c.id = #{id} 
	</select>

	<update id="cust_update" parameterType="com.comdosoft.financial.user.domain.zhangfu.Customer" flushCache="true"  statementType="PREPARED">
		update customers
		<trim prefix="SET" suffixOverrides=",">
			updated_at = NOW(),
			<if test="name != null and name !=''">name = #{name},</if>
			<if test="phone != null and phone !=''">phone = #{phone},</if>
			<if test="email != null and email !=''">email = #{email},</if>
			<if test="cityId != null and cityId !=''">city_id = #{cityId}</if>
			<if test="dentcode != null and dentcode !=''">dentcode = #{dentcode}</if>
			<if test="accountType == 1">username = #{phone}</if>
			<if test="accountType == 2">username = #{email}</if>
		</trim>
		where id = #{id}
	</update>

	<update id="updatePassword" flushCache="true">
	<![CDATA[
		UPDATE customers SET password = #{password} ,updated_at = NOW()
		 WHERE id = #{id}
	]]>
	</update>

	<select id="findUsername" resultType="map">
	<![CDATA[
		SELECT
			c.id
		FROM
			customers c
		WHERE
			c.username = #{param1}
	]]>
	</select>
	
	
	<select id="getTradeRecordsCount" resultType="int">
	<![CDATA[
		SELECT COUNT(i.id)
		  FROM customer_integral_records i LEFT JOIN orders d ON i.target_id = d.id
		 WHERE i.customer_id = #{customerId}
	]]>
	</select>
	
	<select id="countAddress" resultType="int">
	<![CDATA[
		SELECT COUNT(i.id)
		  FROM customer_addresses i  
		 WHERE i.customer_id = #{customerId} and i.status = 1
	]]>
	</select>

	<select id="getIntegralList" resultType="map">
 
 SELECT IFNULL( i.quantity, 0) as quantity , IFNULL( i.types ,'' ) as types  , IFNULL(i.target_type, '') as target_type,   IFNULL(i.description,'') as order_number,  
			   DATE_FORMAT(i.created_at, '%Y-%m-%d %T') payedAt
		  FROM customer_integral_records i  
		 WHERE i.customer_id = #{customerId}
	  ORDER BY i.created_at DESC
		 LIMIT #{offset}, #{rows}  
	</select>

	<select id="getIntegralTotal" resultType="map">
<!-- 	<![CDATA[
		SELECT SUM(i.quantity) quantityTotal
		  FROM customer_integral_records i
		 WHERE i.customer_id = #{customerId}
	]]> -->
	SELECT
		c.integral  as quantityTotal,c.integral/s.param_value as moneyTotal
	FROM
		customers c
	LEFT JOIN sys_config s on s.param_name='integralConvert'
	WHERE
		c.id =  #{param1}
	</select>
	
	<select id="getjifen" resultType="map">
	<![CDATA[
	SELECT
		IFNULL(c.integral,0)  as quantityTotal,IFNULL(c.integral/s.param_value,0) as dh_total
	FROM
		customers c
	LEFT JOIN sys_config s on s.param_name='integralConvert'
	WHERE
		c.id =  #{customer_id}
	]]>
	</select>

	<insert id="insertIntegralConvert" useGeneratedKeys="true" keyProperty="id">
	<![CDATA[
		INSERT INTO customer_integral_converts (name, phone, price, quantity, created_at, updated_at, customer_id)
		VALUES (#{name}, #{phone}, #{price}, #{quantity}, #{createdAt}, #{updatedAt}, #{customerId})
	]]>
	</insert>

	<update id="updateIntegralTotal" flushCache="true">
	<![CDATA[
		UPDATE customers SET integral = #{integralTotal} ,updated_at = NOW()
		 WHERE id = #{customerId}
	]]>
	</update>

	<insert id="insertIntegralRecord" useGeneratedKeys="true" keyProperty="id">
	<![CDATA[
		INSERT INTO customer_integral_records (customer_id, types, quantity)
		VALUES (#{customerId}, #{types}, #{quantity})
	]]>
	</insert>

	<select id="getAddressList" resultType="map">
	<![CDATA[
	     SELECT
			ca.id,
			IFNULL(c2.id,'') AS city_parent_id,
			IFNULL(c. NAME,'') AS city_name,
			IFNULL(c2. NAME,'') AS city_parent_name,
			IFNULL(city_id,'') as cityId,
			concat(
				IFNULL(c2. NAME, ''),
				IFNULL(c. NAME, '')
			) AS city,
			IFNULL(address,'') as address,
			IFNULL(zip_code,'') as  zipCode,
			IFNULL(receiver,'') as receiver,
			IFNULL(moblephone,'') as moblephone,
			IFNULL(telphone,'') as telphone,
			IFNULL(is_default,'') as  isDefault,
			IFNULL(customer_id,'') as  customerId
		FROM
			customer_addresses ca
		LEFT JOIN cities c ON ca.city_id = c.id
		LEFT JOIN cities c2 ON c.parent_id = c2.id
		WHERE
			ca.customer_id = #{customerId} and ca.status = 1
		ORDER BY
			ca.created_at DESC
	]]>
	</select>

	<select id="getOneAddress" resultType="map">
	<![CDATA[
		SELECT
			id,
			IFNULL(city_id,'') as city_id,
			IFNULL(receiver,'') as receiver,
			IFNULL(moblephone,'') as moblephone,
			IFNULL(zip_code,'') as zip_code,
			IFNULL(is_default,'') as is_default,
			IFNULL(address,'') as address
		FROM
			customer_addresses
		WHERE
			id = #{id} and status = 1
	]]>
	</select>

	<insert id="insertAddress" useGeneratedKeys="true" keyProperty="id">
	<![CDATA[
		INSERT INTO customer_addresses (city_id, receiver, moblephone, telphone, zip_code, address, is_default, customer_id, created_at, status)
		VALUES (#{cityId}, #{receiver}, #{moblephone}, #{telphone}, #{zipCode}, #{address}, #{isDefault}, #{customerId}, NOW(),1)
	]]>
	</insert>

	<update id="updateAddress">
		UPDATE customer_addresses
		<trim prefix="SET" suffixOverrides=",">
		updated_at = NOW(),
			<if test="cityId != null">city_id = #{cityId},</if>
			<if test="zipCode != null and zipCode !=''">zip_code = #{zipCode},</if>
			<if test="address != null and address !=''">address = #{address},</if>
			<if test="receiver != null and receiver !=''">receiver = #{receiver},</if>
			<if test="telphone != null and telphone !=''">telphone = #{telphone},</if>
			<if test="moblephone != null and moblephone !=''">moblephone = #{moblephone},</if>
			<if test="isDefault != null">is_default = #{isDefault}</if>
		</trim>
		WHERE id = #{id}
	</update>

	<update id="updateDefaultAddress">
	<![CDATA[
		UPDATE customer_addresses SET is_default = #{is_default} ,updated_at = NOW()
		 WHERE customer_id = #{customerId}
	]]>
	</update>

	<update id="setDefaultAddress">
	<![CDATA[
		UPDATE customer_addresses SET is_default = 1 ,updated_at = NOW()
		 WHERE id = #{id}  and customer_id = #{customerId}
	]]>
	</update>
	<update id="setNotDefaultAddress">
	<![CDATA[
		UPDATE customer_addresses SET is_default =2 ,updated_at = NOW()
		 WHERE id != #{id} and customer_id = #{customerId}
	]]>
	</update>
	

	<!-- <delete id="deleteAddress">
	<![CDATA[
		DELETE FROM customer_addresses WHERE id = #{id}
	]]>
	</delete> -->
	
	<update id="deleteAddress">
	<![CDATA[
		UPDATE customer_addresses SET status = 2 ,	updated_at = NOW()
		 WHERE id = #{id}
	]]>
	</update>

</mapper>