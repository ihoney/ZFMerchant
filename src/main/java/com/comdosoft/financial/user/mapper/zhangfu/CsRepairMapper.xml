<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.user.mapper.zhangfu.CsRepairMapper">
<!-- 维修 -->
	<select id="repairPayFinish" resultType="map" >
	SELECT
		crp.id
	FROM
		cs_repair_payments crp
	WHERE
		crp.cs_repair_id = #{id}
	</select>
	
	
	<select id="countRepair" resultType="int" >
		SELECT count(crp.id) as count 
	FROM
		cs_repair_payments crp
	WHERE
		crp.cs_repair_id = #{param1}
		
	</select>
	
	<select id="count" resultType="int" >
		SELECT count(o.id) as count 
		FROM
			cs_repairs o
		LEFT JOIN terminals t ON o.terminal_id = t.id
		WHERE
			o.customer_id = #{customer_id}
		ORDER BY
			o.created_at DESC
		
	</select>
	
	<select id="wxlist" resultType="map">
	SELECT
		cs.`status`,cs.id,cs.t,
		cs.updated_at
	FROM
		(
			SELECT
				CASE `status`
			WHEN 2 THEN
				'1条维修申请待发回'
			WHEN 3 THEN
				'1条维修申请维修中'
			WHEN 4 THEN
				'1条维修申请处理完成'
			WHEN 5 THEN
				'1条维修申请已取消'
			ELSE '其他' 
			END AS `status`,id , 'repair' as t,
			updated_at
		FROM
			cs_repairs 
		WHERE
			`status` != 1   and customer_id=#{customer_id}
		UNION ALL
			SELECT
					CASE `status`
			WHEN 2 THEN
				'1条退货申请退货中'
			WHEN 4 THEN
				'1条退货申请处理完成'
			WHEN 5 THEN
				'1条退货申请已取消'
				ELSE '其他'
			END AS `status`,id,'retrun' as t,
				updated_at
			FROM
				cs_returns
			WHERE
				`status` != 1  and customer_id=#{customer_id}
			UNION ALL
				SELECT
						CASE `status`
			WHEN 2 THEN
				'1条换货申请换货中'
			WHEN 4 THEN
				'1条换货申请处理完成'
			WHEN 5 THEN
				'1条换货申请已取消'
				ELSE '其他'
			END AS `status`,id,'change' as t,
					updated_at
				FROM
					cs_changes
				WHERE
					`status` != 1   and customer_id=#{customer_id}
		) cs
	ORDER BY
		cs.updated_at DESC
	LIMIT 0, 7
	</select>
	
	<select id="countSearch" resultType="int" >
		SELECT count(o.id) as count 
		FROM
			cs_repairs o
		LEFT JOIN terminals t ON o.terminal_id = t.id
		WHERE
			o.customer_id = #{customer_id}
			<if test="search !=null and search!=''">
		        and (o.apply_num like "%"#{search}"%"  or t.serial_num like "%"#{search}"%") 
		   </if>
		<if test="q !=null and q!=''">
		and o.status = #{q}
		</if>
		ORDER BY
			o.created_at DESC
		
	</select>
	
	<select id="findAll" resultType="map"  >
			SELECT
			o.id,o.repair_price,
			o.created_at,
			o.status,
			t.serial_num,
			o.apply_num,
			gb.`name` AS brand_name,
			g.model_number AS brand_number,
			pc.`name` as zhifu_pt, m.title AS merchant_name,
			m.phone AS mer_phone
		FROM
			cs_repairs o
		LEFT JOIN terminals t ON o.terminal_id = t.id
		LEFT JOIN goods g ON t.good_id = g.id
		LEFT JOIN good_brands gb ON g.good_brands_id = gb.id
		LEFT JOIN pay_channels pc ON t.pay_channel_id = pc.id
		LEFT JOIN merchants m ON t.merchant_id = m.id
		WHERE
			o.customer_id = #{customer_id}
		ORDER BY
			o.created_at DESC
		LIMIT #{offset},#{rows}
		
	</select>
	
	<select id="search" resultType="map"  >
			SELECT
			o.id,
			o.created_at,
			o.status,
			t.serial_num,
			o.apply_num,
			gb.`name` AS brand_name,
			g.model_number AS brand_number,
			pc.`name` as zhifu_pt, m.title AS merchant_name,
			m.phone AS mer_phone
		FROM
			cs_repairs o
		LEFT JOIN terminals t ON o.terminal_id = t.id
		LEFT JOIN goods g ON t.good_id = g.id
		LEFT JOIN good_brands gb ON g.good_brands_id = gb.id
		LEFT JOIN pay_channels pc ON t.pay_channel_id = pc.id
		LEFT JOIN merchants m ON t.merchant_id = m.id
		WHERE
			o.customer_id = #{customer_id}
			<if test="search !=null and search!=''">
		       and (o.apply_num like "%"#{search}"%"  or t.serial_num like "%"#{search}"%") 
		   </if>
		<if test="q !=null and q!=''">
		and o.status = #{q}
		</if>
		ORDER BY
			o.created_at DESC
		LIMIT #{offset},#{rows}
		
	</select>
	
	<select id="findById" resultType="map"  >
		SELECT
			o.id,o.repair_price,
			o.`status` AS apply_status,
			o.created_at AS apply_time,
			t.serial_num,o.apply_num,o.pay_types,
			gb.`name` AS brand_name,
			g.model_number AS brand_number,
			pc.`name` as zhifu_pt, m.title AS merchant_name,
			m.phone AS mer_phone,
			cra.address,cra.receiver,cra.phone as receiver_phone,
			o.description
			
		FROM
			cs_repairs o
		LEFT JOIN terminals t ON o.terminal_id = t.id
		LEFT JOIN goods g ON t.good_id = g.id
		LEFT JOIN good_brands gb ON g.good_brands_id = gb.id
		LEFT JOIN pay_channels pc ON t.pay_channel_id = pc.id
		LEFT JOIN merchants m ON t.merchant_id = m.id
		LEFT JOIN cs_receiver_addresses cra ON o.receive_address_id = cra.id
		WHERE
			o.id = #{id}
	</select>
	
	<select id="findRepairByNumber" resultType="map"  >
		SELECT
			o.id,IFNULL(o.repair_price,0) as repair_price,
			IFNULL(o.`status` ,'') AS apply_status,
			IFNULL(o.created_at,'') AS apply_time
		FROM
			cs_repairs o
		WHERE
			o.apply_num = #{param1}
	</select>
	
	<!-- 根据 cs_repairs id 查询所有追踪记录-->
		<select id="findTraceById" resultType="map" >
		SELECT
			
			crm.content AS marks_content,
			crm.created_at,
			c.`name` AS marks_person
		FROM
			 cs_repair_marks crm 
		LEFT JOIN customers c ON crm.customer_id = c.id
		WHERE
		 crm.cs_repair_id = #{id}
	</select>
	
	
	<update id="updateRepair" >
	update  cs_repairs 
	SET STATUS = #{repairStatus.code},updated_at = NOW()
	where id = #{id}
	</update>
	
	
	<update id="cancelApply">
	update  cs_repairs 
	SET STATUS = #{repairStatus.code},updated_at = NOW()
	where id = #{id}
	</update>
	
	<!-- 提交物流信息 -->
	<insert id="addMark" parameterType="com.comdosoft.financial.user.domain.zhangfu.CsRepairMark">
       INSERT INTO cs_repair_marks (cs_repair_id,customer_id,content,created_at)
       VALUES(#{id},#{customer_id},#{content},NOW())
    </insert>
    
     <update id="changeStatus">
	update  cs_repairs 
	SET STATUS = #{updateStatus.code},updated_at = NOW()
	where id = #{id}
	</update>
</mapper>